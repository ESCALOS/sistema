/*--------------MODIFICAR TABLA CECO------------------------------------------------*/
/*-----Aumentar---------------*/
CREATE TRIGGER `aumenta_monto_ceco` AFTER INSERT ON `ceco_allocation_amounts`
 FOR EACH ROW UPDATE cecos SET amount = amount + new.allocation_amount, updated_at = CURRENT_TIMESTAMP WHERE id = new.ceco_id
 /*--------Actualizar y Disminuir----------*/
IF(new.is_canceled) THEN
UPDATE cecos SET amount = amount-old.allocation_amount, updated_at = CURRENT_TIMESTAMP WHERE id = new.ceco_id;
ELSE
UPDATE cecos SET amount = amount + new.allocation_amount-old.allocation_amount, updated_at = CURRENT_TIMESTAMP WHERE id = new.ceco_id;
END IF


/*--------MODIFICAR TABLA TRACTOR E IMPLEMENTO-------*/
/*--------Aumentar---------------*/
CREATE TRIGGER `aumentar_horas` AFTER INSERT ON `tractor_reports`
 FOR EACH ROW BEGIN
/*------Tractores----------*/
UPDATE tractors SET hour_meter = hour_meter+new.hours, updated_at = CURRENT_TIMESTAMP WHERE id = new.tractor_id;
/*--------Implementos-----------------*/
UPDATE implements SET hours = hours+(new.hours)*0.85, updated_at = CURRENT_TIMESTAMP WHERE id = new.implement_id;
END

/*--------Actualizar y Disminuir---------------*/
CREATE TRIGGER `actualizar_horas` AFTER UPDATE ON `tractor_reports`
 FOR EACH ROW BEGIN
IF (new.is_canceled) THEN
/*------Tractores----------*/
UPDATE tractors SET hour_meter = hour_meter-old.hours, updated_at = CURRENT_TIMESTAMP WHERE id = new.tractor_id;
/*--------Implementos-----------------*/
UPDATE implements SET hours = hours-(old.hours)*0.85, updated_at = CURRENT_TIMESTAMP WHERE id = new.implement_id;
ELSE
/*------Tractores----------*/
UPDATE tractors SET hour_meter = hour_meter-(old.hours+new.hours), updated_at = CURRENT_TIMESTAMP WHERE id = new.tractor_id;
/*--------Implementos-----------------*/
UPDATE implements SET hours = hours+(old.hours-new.hours)*0.85, updated_at = CURRENT_TIMESTAMP WHERE id = new.implement_id;
END IF;
END


/*------------STOCK M√çNIMO--------------------------------*/
/*-----------INGRESO Y SALIDA------------------------------*/
CREATE TRIGGER `aumentar_stock_minimo` AFTER INSERT ON `min_stock_details`
 FOR EACH ROW IF(new.movement="INGRESO") THEN
UPDATE min_stocks SET current_quantity = current_quantity + new.quantity, price = price + new.price WHERE item_id = new.item_id AND warehouse_id = new.warehouse_id;
ELSE
UPDATE min_stocks SET current_quantity = current_quantity - new.quantity, price = price - new.price WHERE item_id = new.item_id AND warehouse_id = new.warehouse_id;
END IF
/*--------ACTUALIZAR----------------------------------------*/
CREATE TRIGGER `actualizar_aumento_stock_minimo` AFTER UPDATE ON `min_stock_details`
 FOR EACH ROW IF(new.movement="INGRESO") THEN
IF(new.is_canceled) THEN
UPDATE min_stocks SET current_quantity = current_quantity - old.quantity, price = price - old.price WHERE item_id = old.item_id AND warehouse_id = old.warehouse_id;
ELSE
UPDATE min_stocks SET current_quantity = current_quantity - old.quantity+new.quantity, price = price - old.price + new.price WHERE item_id = new.item_id AND warehouse_id = new.warehouse_id;
END IF;
ELSE
IF(new.is_canceled) THEN
UPDATE min_stocks SET current_quantity = current_quantity + new.quantity, price = price + new.price WHERE item_id = new.item_id AND warehouse_id = new.warehouse_id;
ELSE
UPDATE min_stocks SET current_quantity = current_quantity + old.quantity-new.quantity, price = price + old.price - new.price WHERE item_id = new.item_id AND warehouse_id = new.warehouse_id;
END IF;
END IF
